/*
 * Avaya Oceana CRM Connector
 * RESTful API exposed by Oceana, to facilitate integration with CRM systems.   This API caters to an integration where Agents (and Supervisors) are using a CRM-provided desktop application to interact with Oceana. As such, the core functionality handled by Oceana Workspaces must be exposed to the CRM system through a CRM-specific Adapter. The Adapter is a server-side component, and this API provides a server-server integration.   The API is bi-directional, allowing an external component (adapter) to send commands to Oceana, and to be notified via asynchronous events. The Oceana CRM Connector exposes services on a number of resources, which the adapter can invoke. To be notified, an adapter must implement RESTful services as well. Endpoints for the adapter services are communicated to the Connecter at runtime.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: oceanateam@avaya.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.avaya.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import javax.validation.constraints.*;

/**
 * Adapter
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2017-11-10T09:25:58.946Z")
public class Adapter   {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("eventsUrl")
  private String eventsUrl = null;

  public Adapter id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   **/
  @JsonProperty("id")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Adapter eventsUrl(String eventsUrl) {
    this.eventsUrl = eventsUrl;
    return this;
  }

  /**
   * Get eventsUrl
   * @return eventsUrl
   **/
  @JsonProperty("eventsUrl")
  public String getEventsUrl() {
    return eventsUrl;
  }

  public void setEventsUrl(String eventsUrl) {
    this.eventsUrl = eventsUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Adapter adapter = (Adapter) o;
    return Objects.equals(this.id, adapter.id) &&
        Objects.equals(this.eventsUrl, adapter.eventsUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, eventsUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Adapter {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    eventsUrl: ").append(toIndentedString(eventsUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

